import type { DemoDefinition } from "@/types/demo";
import SliderDemo from "./slider-demo";
import SliderSize from "./slider-size";
import SliderDisabled from "./slider-disabled";
import SliderOrientation from "./slider-orientation";
import SliderWithIndicator from "./slider-with-indicator";

const SLIDER_DEMO: DemoDefinition = {
  id: "slider",
  label: "Slider",
  description: "Sliders let users make selections from a range of values",
  content: [
    {
      id: "overview",
      preview: SliderDemo,
      code: 'import Slider from "@/components/ui/slider";\n \nexport function SliderDemo() {\n    return (\n        <div className="demo">\n            <Slider defaultValue={50} />\n        </div>\n    );\n};',
    },
    {
      id: "installation",
      label: "Installation",
      code: {
        tsx: 'import "./style.css";\nimport { useState, type ComponentProps, type CSSProperties } from "react";\n \ntype SliderProps = Omit<ComponentProps<"input">, "type" | "size"> & {\n    labeled?: boolean;\n    LabelFormatter?: string;\n    orientation?: "horizontal" | "vertical";\n    size?: "xs" | "sm" | "md" | "lg" | "xl";\n};\n \nconst Slider = ({\n    size = "xs",\n    orientation = "horizontal",\n    min = 0,\n    max = 100,\n    step = 1,\n    labeled = false,\n    LabelFormatter = "",\n    defaultValue = min,\n    ...props\n}: SliderProps) => {\n    const [value, setValue] = useState<number>(Number(defaultValue));\n \n    function cssValue() {\n        return Math.max(\n            ((value - Number(min)) / (Number(max) - Number(min))) * 100,\n            0\n        );\n    }\n \n    return (\n        <div\n            mui-slider=""\n            data-size={size}\n            data-orientation={orientation}\n            data-labeled={labeled && `${value}${LabelFormatter}`}\n            style={{ "--value": cssValue() } as CSSProperties}>\n            <input\n                mui-slider-track=""\n                {...props}\n                min={min}\n                max={max}\n                step={step}\n                defaultValue={defaultValue}\n                type="range"\n                onInput={(e) => setValue(Number(e.currentTarget.value))}\n            />\n        </div>\n    );\n};\n \nexport default Slider;',
        css: '[mui-slider] {\n    --slider-thumb-offset: 6px;\n    --slider-thumb-width: 4px;\n \n    &[data-size="xs"] {\n        --slider-height: 16px;\n        --slider-thumb-height: 44px;\n        --slider-radius: var(--radius-sm);\n    }\n \n    &[data-size="sm"] {\n        --slider-height: 24px;\n        --slider-thumb-height: 44px;\n        --slider-radius: var(--radius-sm);\n    }\n \n    &[data-size="md"] {\n        --slider-height: 40px;\n        --slider-thumb-height: 52px;\n        --slider-radius: var(--radius-md);\n    }\n \n    &[data-size="lg"] {\n        --slider-height: 56px;\n        --slider-thumb-height: 68px;\n        --slider-radius: var(--radius-lg);\n    }\n \n    &[data-size="xl"] {\n        --slider-height: 96px;\n        --slider-thumb-height: 108px;\n        --slider-radius: var(--radius-xl);\n    }\n \n    &[data-orientation="horizontal"] {\n        width: fit-content;\n \n        &::before {\n            transform: translateY(-50%);\n        }\n \n        &:not([data-labeled="false"]) {\n            &::after {\n                transform: translateX(-50%);\n            }\n        }\n \n        [mui-slider-track] {\n            &::before {\n                height: 100%;\n                width: calc(var(--value) * 1% - var(--slider-thumb-offset));\n                border-radius: var(--slider-radius) 0 0 var(--slider-radius);\n            }\n \n            &::after {\n                height: 100%;\n                width: calc(100% - (var(--value) * 1%) - var(--slider-thumb-offset));\n                border-radius: 0 var(--slider-radius) var(--slider-radius) 0;\n            }\n \n            &::-webkit-slider-runnable-track {\n                height: var(--slider-height);\n            }\n \n            &::-webkit-slider-thumb {\n                transform: translateY(-50%);\n                width: var(--slider-thumb-width);\n                height: var(--slider-thumb-height);\n            }\n        }\n    }\n \n    &[data-orientation="vertical"] {\n        rotate: 180deg;\n        height: fit-content;\n        writing-mode: vertical-lr;\n        width: var(--slider-height);\n \n        &::before {\n            transform: translateX(-50%);\n        }\n \n        &:not([data-labeled="false"]) {\n            &::after {\n                transform: translateY(-50%) rotate(90deg);\n            }\n        }\n \n        [mui-slider-track] {\n            writing-mode: vertical-lr;\n \n            &::before {\n                width: 100%;\n                height: calc(var(--value) * 1% - var(--slider-thumb-offset));\n                border-radius: var(--slider-radius) var(--slider-radius) 0 0;\n            }\n \n            &::after {\n                width: 100%;\n                height: calc(100% - (var(--value) * 1%) - var(--slider-thumb-offset));\n                border-radius: 0 0 var(--slider-radius) var(--slider-radius);\n            }\n \n            &::-webkit-slider-runnable-track {\n                width: var(--slider-height);\n            }\n \n            &::-webkit-slider-thumb {\n                transform: translateX(-50%);\n                height: var(--slider-thumb-width);\n                width: var(--slider-thumb-height);\n            }\n        }\n    }\n \n    position: relative;\n    height: var(--slider-height);\n \n    /* Tick mark */\n    &::before {\n        content: "";\n        z-index: 2;\n        width: 4px;\n        height: 4px;\n        position: absolute;\n        border-radius: var(--radius-circled);\n        inset-block-start: 50%;\n        inset-inline-end: calc(var(--spacing-8) - var(--spacing-2));\n        background-color: var(--color-on-secondary-container);\n    }\n \n    /* Label */\n    &:not([data-labeled="false"]) {\n        &::after {\n            z-index: 1;\n            opacity: 0;\n            visibility: hidden;\n            content: attr(data-labeled);\n            position: absolute;\n            border-radius: var(--radius-rounded);\n            padding: var(--spacing-12) var(--spacing-16);\n            color: var(--color-on-primary);\n            background-color: var(--color-on-secondary-container);\n            inset-inline-start: calc(var(--value) * 1%);\n            inset-block-end: calc(100% + var(--spacing-16));\n            transition: opacity var(--transition-standard-fast-effects),\n                visibility var(--transition-standard-fast-effects);\n        }\n    }\n \n    [mui-slider-track] {\n        outline: none;\n        position: relative;\n        background: transparent;\n        appearance: none;\n        -webkit-appearance: none;\n        border-radius: var(--slider-radius);\n \n        &::before,\n        &::after {\n            content: "";\n            position: absolute;\n            background-color: var(--color-primary);\n        }\n \n        /* Selected track */\n        &::before {\n            z-index: 3;\n        }\n \n        /* Unselected track */\n        &::after {\n            inset-inline-end: 0;\n            background-color: var(--color-secondary-container);\n        }\n \n        &::-webkit-slider-thumb {\n            outline: 10px solid transparent;\n            outline-offset: var(--slider-thumb-offset);\n            z-index: 3;\n            cursor: grab;\n            position: relative;\n            appearance: none;\n            -webkit-appearance: none;\n            inset-block-start: 50%;\n            border-radius: var(--radius-rounded);\n            background-color: var(--color-primary);\n            transition: var(--transition-standard-fast-effects);\n        }\n \n        &:hover::-webkit-slider-thumb {\n            opacity: 0.8;\n        }\n \n        &:active::-webkit-slider-thumb {\n            cursor: grabbing;\n        }\n \n        &:disabled {\n            pointer-events: none;\n            color: var(--color-on-surface);\n \n            &::after {\n                background-color: color-mix(in srgb, currentColor 12%, transparent);\n            }\n \n            &::before,\n            &::-webkit-slider-thumb {\n                background-color: color-mix(in srgb, currentColor 38%, transparent);\n            }\n        }\n \n        &:focus-visible::-webkit-slider-thumb {\n            outline-width: 3px;\n            outline-color: var(--color-on-secondary-container);\n        }\n    }\n \n    &:has([mui-slider-track]:focus) {\n        &:not([data-labeled="false"])::after {\n            opacity: 1;\n            visibility: visible;\n        }\n    }\n \n    &:has([mui-slider-track]:disabled) {\n        &::before {\n            background-color: color-mix(in srgb, currentColor 38%, transparent);\n        }\n    }\n}',
      },
    },
    {
      id: "size",
      label: "Size",
      preview: SliderSize,
      code: 'import Slider from "@/components/ui/slider";\n \nexport function SliderSize() {\n    const sizes: Array<"xs" | "sm" | "md" | "lg" | "xl"> = [\n        "xs",\n        "sm",\n        "md",\n        "lg",\n        "xl",\n    ];\n \n    return (\n        <div className="demo">\n            {sizes.map((size) => (\n                <Slider key={size} size={size} defaultValue={50} />\n            ))}\n        </div>\n    );\n};',
    },
    {
      id: "orientation",
      label: "Orientation",
      preview: SliderOrientation,
      code: 'import Slider from "@/components/ui/slider";\n \nexport function SliderOrientation() {\n    return (\n        <div className="demo">\n            <Slider orientation="horizontal" defaultValue={50} />\n            <Slider orientation="vertical" size="xl" defaultValue={50} />\n        </div>\n    );\n};',
    },
    {
      id: "with-indicator",
      label: "With indicator ",
      preview: SliderWithIndicator,
      code: 'import Slider from "@/components/ui/slider";\n \nexport function SliderWithIndicator() {\n    return (\n        <div className="demo">\n            <Slider labeled defaultValue={50} />\n            <Slider\n                labeled\n                LabelFormatter="%"\n                size="xl"\n                defaultValue={50}\n                orientation="vertical"\n            />\n        </div>\n    );\n};',
    },
    {
      id: "disabled",
      label: "Disabled",
      preview: SliderDisabled,
      code: 'import Slider from "@/components/ui/slider";\n \nexport function SliderDisabled() {\n    return (\n        <div className="demo">\n            <Slider defaultValue={50} disabled />\n        </div>\n    );\n};',
    },
  ],
};

export default SLIDER_DEMO;
