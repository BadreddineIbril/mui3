import type { DemoDefinition } from "@/types/demo";
import SelectDemo from "./select-demo";
import SelectVariant from "./select-variant";
import SelectDisabled from "./select-disabled";

const SELECT_DEMO: DemoDefinition = {
  id: "select",
  label: "Select",
  description:
    "Select menus display a list of choices on temporary surfaces and display the currently selected menu item above the menu.",
  content: [
    {
      id: "overview",
      label: "Overview",
      preview: SelectDemo,
      code: 'import Button from "@/components/ui/button";\nimport {\n    SideSheet,\n    SideSheetBody,\n    SideSheetClose,\n    SideSheetContent,\n    SideSheetFooter,\n    SideSheetHeader,\n    SideSheetTrigger,\n} from "@/components/ui/side-sheet";\n \nexport function SideSheetDemo() {\n    return (\n        <div className="demo">\n            <SideSheet>\n                <SideSheetTrigger>\n                    <Button variant="outlined">Click to open</Button>\n                </SideSheetTrigger>\n                <SideSheetContent>\n                    <SideSheetHeader headline="Title" back />\n                    <SideSheetBody>My content</SideSheetBody>\n                    <SideSheetFooter style={{ display: "flex", gap: "12px" }} showDivider>\n                        <Button rounded>Save</Button>\n                        <SideSheetClose>\n                            <Button variant="outlined" rounded>\n                                Cancel\n                            </Button>\n                        </SideSheetClose>\n                    </SideSheetFooter>\n                </SideSheetContent>\n            </SideSheet>\n        </div>\n    );\n};',
    },
    {
      id: "installation",
      label: "Installation",
      code: {
        tsx: 'import "./style.css";\nimport {\n    useState,\n    useEffect,\n    useContext,\n    cloneElement,\n    createContext,\n    type ComponentProps,\n    type ReactElement,\n} from "react";\nimport Icon from "@/components/misc/icon";\nimport IconButton from "@/components/ui/icon-button";\n \ntype SideSheetProps = ComponentProps<"div"> & {\n    variant?: "standard" | "modal";\n    open?: boolean;\n};\ntype SideSheetContentProps = ComponentProps<"div">;\ntype SideSheetHeaderProps = Omit<ComponentProps<"div">, "children"> & {\n    headline: string;\n    close?: boolean;\n    back?: boolean;\n};\ntype SideSheetBodyProps = ComponentProps<"div">;\ntype SideSheetFooterProps = ComponentProps<"div"> & { showDivider?: boolean };\n \nconst SideSheetContext = createContext<{\n    isOpen: boolean;\n    toggle: (state: boolean) => void;\n    variant: "standard" | "modal";\n} | null>(null);\n \nconst useSideSheetContext = () => {\n    const ctx = useContext(SideSheetContext);\n    if (!ctx)\n        throw new Error(\n            "SideSheet component must be used within a SideSheet provider"\n        );\n \n    return ctx;\n};\n \nconst SideSheet = ({\n    children,\n    variant = "standard",\n    ...props\n}: SideSheetProps) => {\n    const ESC_KEY = "Escape";\n    const [isOpen, setIsOpen] = useState<boolean>(props.open ?? false);\n \n    function toggle(state: boolean) {\n        setIsOpen(state);\n    }\n \n    useEffect(() => {\n        const onKeyDown = (e: KeyboardEvent) => e.key === ESC_KEY && toggle(false);\n \n        if (isOpen) window.addEventListener("keydown", onKeyDown);\n \n        return () => window.removeEventListener("keydown", onKeyDown);\n    }, [isOpen]);\n \n    return (\n        <SideSheetContext.Provider value={{ isOpen, toggle, variant }}>\n            {children}\n            {isOpen && variant === "modal" && (\n                <div mui-side-sheet-overlay="" onClick={() => toggle(false)} />\n            )}\n        </SideSheetContext.Provider>\n    );\n};\n \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst SideSheetTrigger = ({ children }: { children: ReactElement<any> }) => {\n    const { isOpen, toggle } = useSideSheetContext();\n \n    return cloneElement(children, { onClick: () => toggle(!isOpen) });\n};\n \nconst SideSheetContent = ({ ...props }: SideSheetContentProps) => {\n    const { isOpen, variant } = useSideSheetContext();\n \n    return (\n        <div mui-side-sheet-content={variant} aria-hidden={!isOpen} {...props} />\n    );\n};\n \nconst SideSheetHeader = ({\n    headline,\n    close = false,\n    back = false,\n    ...props\n}: SideSheetHeaderProps) => {\n    const { toggle } = useSideSheetContext();\n \n    return (\n        <div mui-side-sheet-header="" {...props}>\n            {back && (\n                <IconButton flipIconInRtl onClick={() => toggle(false)}>\n                    <Icon name="arrow_back" />\n                </IconButton>\n            )}\n            <h2>{headline}</h2>\n            {close && (\n                <IconButton onClick={() => toggle(false)}>\n                    <Icon name="close" />\n                </IconButton>\n            )}\n        </div>\n    );\n};\n \nconst SideSheetBody = ({ ...props }: SideSheetBodyProps) => {\n    return <div mui-side-sheet-body="" {...props} />;\n};\n \nconst SideSheetFooter = ({\n    showDivider = false,\n    ...props\n}: SideSheetFooterProps) => {\n    return (\n        <div mui-side-sheet-footer="" data-divider={showDivider} {...props} />\n    );\n};\n \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst SideSheetClose = ({ children }: { children: ReactElement<any> }) => {\n    const { toggle } = useSideSheetContext();\n \n    return cloneElement(children, { onClick: () => toggle(false) });\n};\n \nexport {\n    SideSheet,\n    SideSheetTrigger,\n    SideSheetContent,\n    SideSheetHeader,\n    SideSheetBody,\n    SideSheetFooter,\n    SideSheetClose,\n};',
        css: '[mui-side-sheet-content] {\n    --side-sheet-width: 320px;\n \n    z-index: 9999;\n    position: fixed;\n    inset-inline-end: 0;\n    inset-block-start: 0;\n    color: var(--color-on-surface-variant);\n    background-color: var(--color-surface-container);\n    height: 100%;\n    width: var(--side-sheet-width);\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    transition: var(--transition-expressive-default-spatial);\n \n    &[mui-side-sheet-content="standard"] {\n        border-inline-start: 1px solid var(--color-outline-variant);\n    }\n \n    &[mui-side-sheet-content="modal"] {\n        border-start-start-radius: var(--radius-lg);\n        border-end-start-radius: var(--radius-lg);\n        border-inline-start: 1px solid var(--color-outline-variant);\n    }\n \n    &[aria-hidden="true"] {\n        inset-inline-end: calc(var(--side-sheet-width) * -1);\n    }\n \n    [mui-side-sheet-header] {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n \n        & > h2 {\n            flex: 2;\n            overflow: hidden;\n            white-space: nowrap;\n            text-overflow: ellipsis;\n            font: var(--font-title-lg);\n        }\n \n        &:has(> [mui-icon-button]:first-child) {\n            padding-inline-start: var(--spacing-12);\n        }\n \n        & > [mui-icon-button]:last-child {\n            margin-inline-start: var(--spacing-12);\n        }\n    }\n \n    [mui-side-sheet-body] {\n        flex: 2;\n        overflow-y: scroll;\n        padding-inline: var(--spacing-24);\n    }\n \n    [mui-side-sheet-header],\n    [mui-side-sheet-footer] {\n        padding: var(--spacing-24);\n \n        &[data-divider="true"] {\n            border-block-start: 1px solid var(--color-outline-variant);\n        }\n    }\n}\n \n[mui-side-sheet-overlay] {\n    inset: 0;\n    opacity: 0;\n    z-index: 9998;\n    position: fixed;\n    background-color: var(--color-overlay);\n    animation: overlay-fade-in var(--transition-standard-fast-effects) forwards;\n}\n \n@keyframes overlay-fade-in {\n    to {\n        opacity: 1;\n    }\n}"',
      },
    },
    {
      id: "variant",
      label: "Variant",
      preview: SelectVariant,
      code: 'import Button from "@/components/ui/button";\nimport {\n    SideSheet,\n    SideSheetBody,\n    SideSheetClose,\n    SideSheetContent,\n    SideSheetFooter,\n    SideSheetHeader,\n    SideSheetTrigger,\n} from "@/components/ui/side-sheet";\n \nexport function SideSheetVariant() {\n    const variants: Array<"standard" | "modal"> = ["standard", "modal"];\n \n    return (\n        <div className="demo">\n            {variants.map((variant) => (\n                <SideSheet key={variant} variant={variant}>\n                    <SideSheetTrigger>\n                        <Button variant="outlined">Click to open ({variant})</Button>\n                    </SideSheetTrigger>\n                    <SideSheetContent>\n                        <SideSheetHeader\n                            headline="Title"\n                            close={variant === "modal"}\n                            back={variant === "standard"}\n                        />\n                        <SideSheetBody>My content</SideSheetBody>\n                        <SideSheetFooter\n                            style={{ display: "flex", gap: "12px" }}\n                            showDivider>\n                            <Button rounded>Save</Button>\n                            <SideSheetClose>\n                                <Button variant="outlined" rounded>\n                                    Cancel\n                                </Button>\n                            </SideSheetClose>\n                        </SideSheetFooter>\n                    </SideSheetContent>\n                </SideSheet>\n            ))}\n        </div>\n    );\n};',
    },
    {
      id: "disabled",
      label: "Disabled",
      preview: SelectDisabled,
      code: 'import Button from "@/components/ui/button";\nimport {\n    SideSheet,\n    SideSheetBody,\n    SideSheetClose,\n    SideSheetContent,\n    SideSheetFooter,\n    SideSheetHeader,\n    SideSheetTrigger,\n} from "@/components/ui/side-sheet";\n \nexport function SideSheetVariant() {\n    const variants: Array<"standard" | "modal"> = ["standard", "modal"];\n \n    return (\n        <div className="demo">\n            {variants.map((variant) => (\n                <SideSheet key={variant} variant={variant}>\n                    <SideSheetTrigger>\n                        <Button variant="outlined">Click to open ({variant})</Button>\n                    </SideSheetTrigger>\n                    <SideSheetContent>\n                        <SideSheetHeader\n                            headline="Title"\n                            close={variant === "modal"}\n                            back={variant === "standard"}\n                        />\n                        <SideSheetBody>My content</SideSheetBody>\n                        <SideSheetFooter\n                            style={{ display: "flex", gap: "12px" }}\n                            showDivider>\n                            <Button rounded>Save</Button>\n                            <SideSheetClose>\n                                <Button variant="outlined" rounded>\n                                    Cancel\n                                </Button>\n                            </SideSheetClose>\n                        </SideSheetFooter>\n                    </SideSheetContent>\n                </SideSheet>\n            ))}\n        </div>\n    );\n};',
    },
  ],
};

export default SELECT_DEMO;
