import type { DemoDefinition } from "@/types/demo";
import TextFieldDemo from "./text-field-demo";
import TextFieldVariant from "./text-field-variant";
import TextFieldIcon from "./text-field-icon";
import TextFieldPrefix from "./text-field-prefix";
import TextFieldSuffix from "./text-field-suffix";
import TextFieldSupporting from "./text-field-supporting";
import TextFieldError from "./text-field-error";
import TextFieldDisabled from "./text-field-disabled";

const TEXT_FIELD_DEMO: DemoDefinition = {
  id: "text-field",
  label: "Text Field",
  description: "Text fields let users enter text into a UI",
  content: [
    {
      id: "overview",
      label: "Overview",
      preview: TextFieldDemo,
      code: 'import Icon from "@/components/misc/icon";\nimport { Tabs, TabsTrigger, TabsList, TabsContent } from "@/components/ui/tabs";\n \nexport function TabsDemo() {\n    return (\n        <div className="demo">\n            <Tabs defaultTab="flight">\n                <TabsList>\n                    <TabsTrigger value="flight">\n                        <Icon name="flight" /> Flight\n                    </TabsTrigger>\n                    <TabsTrigger value="trips">\n                        <Icon name="trip" /> Trips\n                    </TabsTrigger>\n                    <TabsTrigger value="explore">\n                        <Icon name="explore" /> Explore\n                    </TabsTrigger>\n                </TabsList>\n                <TabsContent value="flight">Flight content</TabsContent>\n                <TabsContent value="trips">Trips content</TabsContent>\n                <TabsContent value="explore">Explore content</TabsContent>\n            </Tabs>\n        </div>\n    );\n};',
    },
    {
      id: "installation",
      label: "Installation",
      code: {
        tsx: 'import "./style.css";\nimport {\n    useRef,\n    useState,\n    Children,\n    useContext,\n    createContext,\n    type ComponentProps,\n    type CSSProperties,\n    useEffect,\n} from "react";\n \ntype TabState = { index: number; value: string };\ntype TabsProps = ComponentProps<"div"> & {\n    variant?: "primary" | "secondary";\n    defaultTab?: string;\n    inlineIcon?: boolean;\n};\ntype TabsListProps = ComponentProps<"div">;\ntype TabsTriggerProps = ComponentProps<"button"> & { value: string };\ntype TabsContentProps = ComponentProps<"div"> & { value: string };\n \nconst TabsContext = createContext<{\n    activeTab: TabState;\n    setTab: (tab: TabState) => void;\n} | null>(null);\n \nconst useTabsContext = () => {\n    const ctx = useContext(TabsContext);\n    if (!ctx)\n        throw new Error("Tabs component must be used within a Tabs provider");\n \n    return ctx;\n};\n \nconst Tabs = ({\n    variant = "primary",\n    defaultTab = "",\n    inlineIcon,\n    ...props\n}: TabsProps) => {\n    const [activeTab, setTab] = useState<{ index: number; value: string }>({\n        index: 0,\n        value: defaultTab,\n    });\n \n    return (\n        <TabsContext.Provider value={{ activeTab, setTab }}>\n            <div mui-tabs={variant} data-inline-icon={inlineIcon} {...props} />\n        </TabsContext.Provider>\n    );\n};\n \nconst TabsList = ({ ...props }: TabsListProps) => {\n    const { activeTab } = useTabsContext();\n \n    const onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        const tabs = Array.from(\n            e.currentTarget.querySelectorAll<HTMLButtonElement>("[mui-tabs-trigger]")\n        );\n        const index = tabs.findIndex((tab) => tab === document.activeElement);\n \n        if (e.key === "ArrowRight") tabs[(index + 1) % tabs.length]?.focus();\n        if (e.key === "ArrowLeft")\n            tabs[(index - 1 + tabs.length) % tabs.length]?.focus();\n    };\n \n    return (\n        <div\n            mui-tabs-list=""\n            {...props}\n            role="tablist"\n            style={\n                {\n                    "--length": Children.count(props.children),\n                    "--active": activeTab.index,\n                } as CSSProperties\n            }\n            onKeyDown={onKeyDown}\n        />\n    );\n};\n \nconst TabsTrigger = ({ value, onClick, ...props }: TabsTriggerProps) => {\n    const ref = useRef<HTMLButtonElement>(null);\n    const { activeTab, setTab } = useTabsContext();\n \n    function getTabIndex(tab: HTMLButtonElement) {\n        return Array.from(tab.parentNode?.children || []).indexOf(tab);\n    }\n \n    useEffect(() => {\n        if (ref.current && activeTab.value === value) {\n            setTab({ value, index: getTabIndex(ref.current) });\n        }\n    }, [activeTab.value]);\n \n    return (\n        <button\n            mui-tabs-trigger=""\n            {...props}\n            ref={ref}\n            role="tab"\n            aria-selected={activeTab.value === value}\n            tabIndex={activeTab.value === value ? 0 : -1}\n            onClick={(e) => {\n                setTab({\n                    index: getTabIndex(e.currentTarget),\n                    value,\n                });\n                onClick?.(e);\n            }}\n        />\n    );\n};\n \nconst TabsContent = ({ value, ...props }: TabsContentProps) => {\n    const { activeTab } = useTabsContext();\n \n    return (\n        <div\n            mui-tabs-content={value}\n            {...props}\n            role="tabpanel"\n            aria-hidden={activeTab.value !== value}\n        />\n    );\n};\n \nexport { Tabs, TabsList, TabsTrigger, TabsContent };',
        css: '[mui-tabs] {\n    [mui-tabs-list] {\n        position: relative;\n        display: grid;\n        grid-template-columns: repeat(var(--length), 1fr);\n        background-color: var(--color-surface-container);\n        border-bottom: 1px solid var(--color-outline-variant);\n \n        &::before {\n            content: "";\n            position: absolute;\n            background-color: var(--color-primary);\n            inset-block-end: 0;\n            inset-inline-start: calc(var(--active) * (100% / var(--length)));\n            transition: var(--transition-standard-slow-effects);\n        }\n \n        [mui-tabs-trigger] {\n            border: none;\n            cursor: pointer;\n            position: relative;\n            outline-offset: var(--spacing-0);\n            outline: 10px solid transparent;\n            font: var(--font-title-sm);\n            background-color: transparent;\n            color: var(--color-on-surface-variant);\n            display: grid;\n            gap: var(--spacing-2);\n            align-items: center;\n            justify-content: center;\n            padding-block: var(--spacing-16);\n \n            &[aria-selected="true"] {\n                outline-offset: calc(var(--spacing-8) * -1);\n            }\n \n            &::before {\n                inset: 0;\n                opacity: 0;\n                position: absolute;\n                background-color: color-mix(in srgb, currentColor 12%, transparent);\n            }\n \n            & > [mui-icon] {\n                font-size: 24px;\n            }\n \n            &:hover {\n                color: var(--color-on-surface);\n                background-color: color-mix(in srgb, currentColor 8%, transparent);\n            }\n \n            &:active::before {\n                content: "";\n                animation: ripple var(--transition-standard-default-effects) forwards;\n            }\n \n            &:focus-visible {\n                animation: focus var(--transition-standard-slow-spatial) forwards;\n            }\n        }\n    }\n \n    [mui-tabs-content] {\n        &[aria-hidden="true"] {\n            display: none;\n        }\n    }\n \n    &[mui-tabs="primary"] {\n        [mui-tabs-list] {\n            &::before {\n                height: 3px;\n                width: calc(100% / var(--length) / 2);\n                transform: translateX(50%);\n                border-radius: var(--radius-rounded) var(--radius-rounded) 0 0;\n            }\n \n            &:dir(rtl)::before {\n                transform: translateX(-50%);\n            }\n \n            [mui-tabs-trigger][aria-selected="true"] {\n                color: var(--color-primary);\n \n                &:hover {\n                    background-color: color-mix(in srgb, currentColor 8%, transparent);\n                }\n            }\n        }\n    }\n \n    &[mui-tabs="secondary"] {\n        [mui-tabs-list] {\n            &::before {\n                height: 2px;\n                width: calc(100% / var(--length));\n                transform: none;\n                border-radius: var(--radius-none);\n            }\n \n            [mui-tabs-trigger][aria-selected="true"] {\n                color: var(--color-on-surface);\n            }\n        }\n    }\n \n    &[data-inline-icon="true"] {\n        [mui-tabs-list] [mui-tabs-trigger] {\n            display: flex;\n            gap: var(--spacing-8);\n        }\n    }\n}',
      },
    },
    {
      id: "variant",
      label: "Variant",
      preview: TextFieldVariant,
      code: 'import Icon from "@/components/misc/icon";\nimport { Tabs, TabsTrigger, TabsList, TabsContent } from "@/components/ui/tabs";\n \nexport function TabsVariant() {\n    return (\n        <div className="demo">\n            <Tabs variant="primary" defaultTab="flight">\n                <TabsList>\n                    <TabsTrigger value="flight">\n                        <Icon name="flight" /> Flight\n                    </TabsTrigger>\n                    <TabsTrigger value="trips">\n                        <Icon name="trip" /> Trips\n                    </TabsTrigger>\n                    <TabsTrigger value="explore">\n                        <Icon name="explore" /> Explore\n                    </TabsTrigger>\n                </TabsList>\n                <TabsContent value="flight">Flight content</TabsContent>\n                <TabsContent value="trips">Trips content</TabsContent>\n                <TabsContent value="explore">Explore content</TabsContent>\n            </Tabs>\n            <Tabs variant="secondary" defaultTab="overview">\n                <TabsList>\n                    <TabsTrigger value="overview">Overview</TabsTrigger>\n                    <TabsTrigger value="specifications">Specifications</TabsTrigger>\n                </TabsList>\n                <TabsContent value="overview">Overview content</TabsContent>\n                <TabsContent value="specifications">Specifications content</TabsContent>\n            </Tabs>\n        </div>\n    );\n};',
    },
    {
      id: "with-icon",
      label: "With Icon",
      preview: TextFieldIcon,
      code: 'import Icon from "@/components/misc/icon";\nimport { Tabs, TabsTrigger, TabsList } from "@/components/ui/tabs";\n \nexport function TabsIcons() {\n    return (\n        <div className="demo">\n            {[...Array(2)].map((_, i) => (\n                <Tabs key={i} defaultTab="flight" inlineIcon={i === 1}>\n                    <TabsList>\n                        <TabsTrigger value="flight">\n                            <Icon name="flight" /> Flight\n                        </TabsTrigger>\n                        <TabsTrigger value="trips">\n                            <Icon name="trip" /> Trips\n                        </TabsTrigger>\n                        <TabsTrigger value="explore">\n                            <Icon name="explore" /> Explore\n                        </TabsTrigger>\n                    </TabsList>\n                </Tabs>\n            ))}\n        </div>\n    );\n};',
    },
    {
      id: "with-prefix",
      label: "With Prefix",
      preview: TextFieldPrefix,
      code: 'import Icon from "@/components/misc/icon";\nimport { Tabs, TabsTrigger, TabsList } from "@/components/ui/tabs";\n \nexport function TabsIcons() {\n    return (\n        <div className="demo">\n            {[...Array(2)].map((_, i) => (\n                <Tabs key={i} defaultTab="flight" inlineIcon={i === 1}>\n                    <TabsList>\n                        <TabsTrigger value="flight">\n                            <Icon name="flight" /> Flight\n                        </TabsTrigger>\n                        <TabsTrigger value="trips">\n                            <Icon name="trip" /> Trips\n                        </TabsTrigger>\n                        <TabsTrigger value="explore">\n                            <Icon name="explore" /> Explore\n                        </TabsTrigger>\n                    </TabsList>\n                </Tabs>\n            ))}\n        </div>\n    );\n};',
    },
    {
      id: "with-suffix",
      label: "With Suffix",
      preview: TextFieldSuffix,
      code: 'import Icon from "@/components/misc/icon";\nimport { Tabs, TabsTrigger, TabsList } from "@/components/ui/tabs";\n \nexport function TabsIcons() {\n    return (\n        <div className="demo">\n            {[...Array(2)].map((_, i) => (\n                <Tabs key={i} defaultTab="flight" inlineIcon={i === 1}>\n                    <TabsList>\n                        <TabsTrigger value="flight">\n                            <Icon name="flight" /> Flight\n                        </TabsTrigger>\n                        <TabsTrigger value="trips">\n                            <Icon name="trip" /> Trips\n                        </TabsTrigger>\n                        <TabsTrigger value="explore">\n                            <Icon name="explore" /> Explore\n                        </TabsTrigger>\n                    </TabsList>\n                </Tabs>\n            ))}\n        </div>\n    );\n};',
    },
    {
      id: "with-supporting",
      label: "With Supporting",
      preview: TextFieldSupporting,
      code: 'import Icon from "@/components/misc/icon";\nimport { Tabs, TabsTrigger, TabsList } from "@/components/ui/tabs";\n \nexport function TabsIcons() {\n    return (\n        <div className="demo">\n            {[...Array(2)].map((_, i) => (\n                <Tabs key={i} defaultTab="flight" inlineIcon={i === 1}>\n                    <TabsList>\n                        <TabsTrigger value="flight">\n                            <Icon name="flight" /> Flight\n                        </TabsTrigger>\n                        <TabsTrigger value="trips">\n                            <Icon name="trip" /> Trips\n                        </TabsTrigger>\n                        <TabsTrigger value="explore">\n                            <Icon name="explore" /> Explore\n                        </TabsTrigger>\n                    </TabsList>\n                </Tabs>\n            ))}\n        </div>\n    );\n};',
    },
    {
      id: "error",
      label: "Error",
      preview: TextFieldError,
      code: 'import Icon from "@/components/misc/icon";\nimport { Tabs, TabsTrigger, TabsList } from "@/components/ui/tabs";\n \nexport function TabsIcons() {\n    return (\n        <div className="demo">\n            {[...Array(2)].map((_, i) => (\n                <Tabs key={i} defaultTab="flight" inlineIcon={i === 1}>\n                    <TabsList>\n                        <TabsTrigger value="flight">\n                            <Icon name="flight" /> Flight\n                        </TabsTrigger>\n                        <TabsTrigger value="trips">\n                            <Icon name="trip" /> Trips\n                        </TabsTrigger>\n                        <TabsTrigger value="explore">\n                            <Icon name="explore" /> Explore\n                        </TabsTrigger>\n                    </TabsList>\n                </Tabs>\n            ))}\n        </div>\n    );\n};',
    },
    {
      id: "disabled",
      label: "Disabled",
      preview: TextFieldDisabled,
      code: 'import Icon from "@/components/misc/icon";\nimport { Tabs, TabsTrigger, TabsList } from "@/components/ui/tabs";\n \nexport function TabsIcons() {\n    return (\n        <div className="demo">\n            {[...Array(2)].map((_, i) => (\n                <Tabs key={i} defaultTab="flight" inlineIcon={i === 1}>\n                    <TabsList>\n                        <TabsTrigger value="flight">\n                            <Icon name="flight" /> Flight\n                        </TabsTrigger>\n                        <TabsTrigger value="trips">\n                            <Icon name="trip" /> Trips\n                        </TabsTrigger>\n                        <TabsTrigger value="explore">\n                            <Icon name="explore" /> Explore\n                        </TabsTrigger>\n                    </TabsList>\n                </Tabs>\n            ))}\n        </div>\n    );\n};',
    },
  ],
};

export default TEXT_FIELD_DEMO;
