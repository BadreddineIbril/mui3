import type { DemoDefinition } from "@/types/demo";
import TextFieldDemo from "./text-field-demo";
import TextFieldVariant from "./text-field-variant";
import TextFieldIcon from "./text-field-icon";
import TextFieldPrefix from "./text-field-prefix";
import TextFieldSuffix from "./text-field-suffix";
import TextFieldSupporting from "./text-field-supporting";
import TextFieldError from "./text-field-error";
import TextFieldDisabled from "./text-field-disabled";

const TEXT_FIELD_DEMO: DemoDefinition = {
  id: "text-field",
  label: "Text Field",
  description: "Text fields let users enter text into a UI",
  content: [
    {
      id: "overview",
      label: "Overview",
      preview: TextFieldDemo,
      code: 'import TextField from "@/components/ui/text-field";\n \nconst TextFieldDemo = () => {\n    return (\n        <div className="demo">\n            <TextField label="Label text" name="field-demo" />\n        </div>\n    );\n};\n \nexport default TextFieldDemo;',
    },
    {
      id: "installation",
      label: "Installation",
      code: {
        tsx: 'import "./style.css";\nimport Icon from "@/components/misc/icon";\nimport type { InputHTMLAttributes } from "react";\n \ntype TextFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n    label: string;\n    icon?: string;\n    prefix?: string;\n    suffix?: string;\n    supporting?: string;\n    variant?: "filled" | "outlined";\n    type?: "text" | "email" | "password" | "search" | "tel" | "url" | "number";\n    error?: boolean;\n    errorText?: string;\n    noSpinner?: boolean;\n};\n \nconst TextField = ({\n    icon,\n    label,\n    prefix,\n    suffix,\n    supporting,\n    variant = "outlined",\n    error = false,\n    errorText,\n    noSpinner = false,\n    placeholder,\n    ...props\n}: TextFieldProps) => {\n    return (\n        <div mui-text-field-wrapper="">\n            <label mui-text-field={variant} data-error={error}>\n                {icon && <Icon mui-text-field-icon="" name={icon} />}\n                {prefix && <span mui-text-field-prefix="">{prefix}</span>}\n                <span mui-text-field-label="">\n                    <span>{label}</span>\n                </span>\n                <input\n                    mui-text-field-input=""\n                    data-no-spinner={noSpinner}\n                    {...props}\n                    placeholder={placeholder || " "}\n                />\n                {suffix && <span mui-text-field-suffix="">{suffix}</span>}\n            </label>\n            {((error && errorText) || supporting) && (\n                <span mui-text-field-supporting="">\n                    {error && errorText ? errorText : supporting}\n                </span>\n            )}\n        </div>\n    );\n};\n \nexport default TextField;',
        css: '[mui-text-field-wrapper] {\n    --text-field-height: 56px;\n    --text-field-primary-color: var(--color-primary);\n    --text-field-border-color: var(--color-outline);\n \n    display: flex;\n    gap: var(--spacing-4);\n    flex-direction: column;\n    width: fit-content;\n \n    [mui-text-field] {\n        z-index: 2;\n        display: flex;\n        position: relative;\n        height: var(--text-field-height);\n        padding-inline: var(--spacing-16);\n \n        &[data-error="true"] {\n            --text-field-primary-color: var(--color-error);\n            --text-field-border-color: var(--color-error);\n \n            [mui-text-field-label] {\n                color: var(--color-error);\n            }\n \n            & + [mui-text-field-supporting] {\n                color: var(--color-error);\n            }\n        }\n \n        &[mui-text-field="outlined"] {\n            overflow: hidden;\n            border-radius: var(--radius-xs);\n            border: 1px solid var(--text-field-border-color);\n            border-block-start: none;\n \n            &::before {\n                content: "";\n                width: 100%;\n                position: absolute;\n                border-block-start: 1px solid var(--text-field-border-color);\n                border-radius: var(--radius-xs) var(--radius-xs) 0 0;\n            }\n \n            [mui-text-field-label] {\n                inset: 0;\n                width: 100%;\n                display: flex;\n                align-items: start;\n                position: absolute;\n \n                &::before,\n                &::after {\n                    content: "";\n                    display: block;\n                    width: var(--spacing-16);\n                    height: var(--spacing-16);\n                    border-block-start: 1px solid var(--text-field-border-color);\n                }\n \n                &::before {\n                    border-start-start-radius: var(--radius-xs);\n                }\n \n                &::after {\n                    flex: 2;\n                    border-start-end-radius: var(--radius-xs);\n                }\n \n                & > span {\n                    position: relative;\n                    transform: translateY(-50%);\n                }\n            }\n        }\n \n        &[mui-text-field="filled"] {\n            border-block-end: 1px solid var(--text-field-border-color);\n            background-color: var(--color-surface-container-highest);\n            border-radius: var(--radius-xs) var(--radius-xs) 0 0;\n \n            [mui-text-field-label] {\n                & > span {\n                    position: absolute;\n                    inset-inline-start: var(--spacing-16);\n                    inset-block-start: calc(var(--text-field-height) / 4);\n                }\n            }\n \n            [mui-text-field-input] {\n                margin-block-start: var(--spacing-16);\n            }\n \n            [mui-text-field-prefix],\n            [mui-text-field-suffix] {\n                align-items: end;\n                padding-block-end: var(--spacing-8);\n            }\n        }\n \n        [mui-text-field-input] {\n            z-index: 2;\n            width: 100%;\n            border: none;\n            outline: none;\n            font: var(--font-body-lg);\n            color: var(--color-on-surface);\n            background-color: transparent;\n            border-radius: var(--radius-none);\n            caret-color: var(--text-field-primary-color);\n \n            &::placeholder {\n                color: var(--color-on-surface-variant);\n            }\n \n            &[data-no-spinner="true"] {\n                &[type="number"]::-webkit-inner-spin-button,\n                &[type="number"]::-webkit-outer-spin-button {\n                    margin: 0;\n                    -webkit-appearance: none;\n                }\n            }\n        }\n \n        [mui-text-field-label] {\n            user-select: none;\n            font: var(--font-body-lg);\n            color: var(--color-on-surface-variant);\n \n            & > span {\n                inset-block-start: calc(var(--text-field-height) / 2);\n                transition: var(--transition-standard-default-effects);\n            }\n        }\n \n        [mui-text-field-icon],\n        [mui-text-field-prefix],\n        [mui-text-field-suffix] {\n            display: flex;\n            align-items: center;\n            color: var(--color-on-surface-variant);\n \n            &:not([mui-text-field-icon]) {\n                visibility: hidden;\n            }\n        }\n \n        &:hover:has([mui-text-field-input]:not(:disabled)) {\n            cursor: text;\n \n            --text-field-border-color: var(--color-on-surface);\n \n            &[data-error="true"] {\n                --text-field-border-color: var(--color-on-error-container);\n \n                [mui-text-field-label] {\n                    color: var(--color-on-error-container);\n                }\n            }\n \n            &[mui-text-field="filled"] {\n                background-color: color-mix(in srgb, currentColor 8%, transparent);\n            }\n        }\n \n        &:has(\n            [mui-text-field-icon],\n            [mui-text-field-prefix],\n            [mui-text-field-suffix]\n        ) {\n            gap: var(--spacing-2);\n            color: var(--color-on-surface-variant);\n \n            &:has([mui-text-field-icon]) {\n                padding-inline: var(--spacing-12);\n \n                [mui-text-field-icon] {\n                    margin-inline-end: var(--spacing-12);\n                }\n \n                &[mui-text-field="outlined"] {\n                    [mui-text-field-label] {\n                        &::before {\n                            width: var(--spacing-48);\n                        }\n                    }\n                }\n \n                &[mui-text-field="filled"] {\n                    [mui-text-field-label] {\n                        & > span {\n                            inset-inline-start: var(--spacing-48);\n                        }\n                    }\n                }\n            }\n        }\n \n        &:has([mui-text-field-input][required]) {\n            [mui-text-field-label] > span {\n                &::after {\n                    content: " *";\n                }\n            }\n        }\n \n        &:has([mui-text-field-input][disabled]) {\n            --text-field-border-color: color-mix(\n                in srgb,\n                var(--color-on-surface) 38%,\n                transparent\n            );\n \n            & > * {\n                color: color-mix(in srgb, currentColor 38%, transparent);\n            }\n \n            &:has([mui-text-field-input]:not(:focus, :not(:placeholder-shown))) {\n                &::before {\n                    inset-inline-start: 0;\n                }\n                [mui-text-field-label] {\n                    &::after,\n                    &::before {\n                        border-color: transparent;\n                    }\n                }\n            }\n \n            &[mui-text-field="filled"] {\n                background-color: color-mix(in srgb, currentColor 4%, transparent);\n            }\n        }\n \n        &:has(\n            [mui-text-field-input]:focus,\n            [mui-text-field-input]:not(:placeholder-shown)\n        ) {\n            overflow: visible;\n \n            [mui-text-field-prefix],\n            [mui-text-field-suffix] {\n                visibility: visible;\n            }\n \n            [mui-text-field-label] {\n                gap: var(--spacing-4);\n                font: var(--font-body-sm);\n            }\n \n            &[mui-text-field="outlined"] {\n                &::before {\n                    content: none;\n                }\n \n                [mui-text-field-label] > span {\n                    inset: 0;\n                }\n            }\n \n            &[mui-text-field="filled"] {\n                [mui-text-field-label] {\n                    height: fit-content;\n \n                    & > span {\n                        inset-block-start: var(--spacing-8);\n                    }\n                }\n            }\n        }\n \n        &:has([mui-text-field-input]:focus) {\n            border-color: var(--text-field-primary-color);\n \n            [mui-text-field-label] {\n                color: var(--text-field-primary-color);\n            }\n \n            &[mui-text-field="outlined"] {\n                box-shadow: -2px 0 0 0 var(--text-field-primary-color),\n                    2px 0 0 0 var(--text-field-primary-color),\n                    inset 0 -2px 0 0 var(--text-field-primary-color);\n \n                [mui-text-field-label] {\n                    &::after,\n                    &::before {\n                        border-color: inherit;\n                        width: var(--spacing-16);\n                        box-shadow: inset 0 2px 0 var(--text-field-primary-color);\n                    }\n                }\n            }\n \n            &[mui-text-field="filled"] {\n                box-shadow: inset 0 -2px 0 0 var(--text-field-primary-color);\n            }\n        }\n    }\n \n    [mui-text-field-supporting] {\n        font: var(--font-body-sm);\n        color: var(--color-outline);\n        padding-inline: var(--spacing-16);\n    }\n}',
      },
    },
    {
      id: "variant",
      label: "Variant",
      preview: TextFieldVariant,
      code: 'import TextField from "@/components/ui/text-field";\n \nconst TextFieldVariant = () => {\n    return (\n        <div className="demo">\n            <TextField variant="outlined" label="Label text" name="field-outlined" />\n            <TextField variant="filled" label="Label text" name="field-filled" />\n        </div>\n    );\n};\n \nexport default TextFieldVariant;',
    },
    {
      id: "with-icon",
      label: "With Icon",
      preview: TextFieldIcon,
      code: 'import TextField from "@/components/ui/text-field";\n \nconst TextFieldIcon = () => {\n    return (\n        <div className="demo">\n            <TextField label="First name" icon="person" name="field-icon" />\n        </div>\n    );\n};\n \nexport default TextFieldIcon;',
    },
    {
      id: "with-prefix",
      label: "With Prefix",
      preview: TextFieldPrefix,
      code: 'import TextField from "@/components/ui/text-field";\n \nconst TextFieldPrefix = () => {\n    return (\n        <div className="demo">\n            <TextField label="URL" prefix="https://" name="field-prefix-1" />\n            <TextField\n                variant="filled"\n                label="URL"\n                prefix="https://"\n                name="field-prefix-2"\n            />\n        </div>\n    );\n};\n \nexport default TextFieldPrefix;',
    },
    {
      id: "with-suffix",
      label: "With Suffix",
      preview: TextFieldSuffix,
      code: 'import TextField from "@/components/ui/text-field";\n \nconst TextFieldSuffix = () => {\n    return (\n        <div className="demo">\n            <TextField\n                label="Price"\n                suffix="USD"\n                noSpinner\n                type="number"\n                name="field-suffix-1"\n            />\n            <TextField\n                variant="filled"\n                label="Price"\n                name="field-suffix-2"\n                suffix="USD"\n                noSpinner\n                type="number"\n            />\n        </div>\n    );\n};\n \nexport default TextFieldSuffix;',
    },
    {
      id: "with-supporting",
      label: "With Supporting",
      preview: TextFieldSupporting,
      code: 'import TextField from "@/components/ui/text-field";\n \nconst TextFieldSupporting = () => {\n    return (\n        <div className="demo">\n            <TextField\n                label="Label text"\n                supporting="Supporting text"\n                name="field-supporting"\n            />\n        </div>\n    );\n};\n \nexport default TextFieldSupporting;',
    },
    {
      id: "error",
      label: "Error",
      preview: TextFieldError,
      code: 'import TextField from "@/components/ui/text-field";\n \nconst TextFieldError = () => {\n    return (\n        <div className="demo">\n            <TextField\n                label="Required"\n                name="field-error-1"\n                required\n                error\n                errorText="Please fill out this field."\n            />\n            <TextField\n                variant="filled"\n                label="Required"\n                name="field-error-2"\n                required\n                error\n                errorText="Please fill out this field."\n            />\n        </div>\n    );\n};\n \nexport default TextFieldError;',
    },
    {
      id: "disabled",
      label: "Disabled",
      preview: TextFieldDisabled,
      code: 'import TextField from "@/components/ui/text-field";\n \nconst TextFieldDisabled = () => {\n    return (\n        <div className="demo">\n            <TextField\n                label="Label text"\n                icon="person"\n                name="field-disabled-1"\n                disabled\n            />\n            <TextField\n                variant="filled"\n                label="Label text"\n                icon="person"\n                name="field-disabled-2"\n                disabled\n            />\n        </div>\n    );\n};\n \nexport default TextFieldDisabled;',
    },
  ],
};

export default TEXT_FIELD_DEMO;
