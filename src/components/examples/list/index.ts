import type { DemoDefinition } from "@/types/demo";
import ListDemo from "./list-demo";
import ListSupporting from "./list-supporting";
import ListOverline from "./list-overline";
import ListLeading from "./list-leading";
import ListWithDivider from "./list-divider";
import ListTrailing from "./list-trailing";
import ListTrailingSupporting from "./list-trailing-supporting";

const LIST_DEMO: DemoDefinition = {
  id: "list",
  label: "List",
  description: "Lists are continuous, vertical indexes of text and images",
  content: [
    {
      id: "overview",
      label: "Overview",
      preview: ListDemo,
      code: 'import {\n    List,\n    ListItem,\n    ListDivider,\n    ListItemLeading,\n} from "@/components/ui/list";\n \nconst ListDemo = () => {\n    return (\n        <div className="demo">\n            <List>\n                <ListItem label="Alejandro Ortega" supportingText="Online">\n                    <ListItemLeading type="monogram" value="A" />\n                </ListItem>\n                <ListItem label="Sofia Sacchi" supportingText="Online">\n                    <ListItemLeading type="monogram" value="S" />\n                </ListItem>\n                <ListDivider />\n                <ListItem label="Lana Russo" supportingText="Offline">\n                    <ListItemLeading type="monogram" value="L" />\n                </ListItem>\n            </List>\n        </div>\n    );\n};\n \nexport default ListDemo;',
    },
    {
      id: "installation",
      label: "Installation",
      code: {
        tsx: 'import "./style.css";\nimport type { ComponentProps } from "react";\nimport Checkbox from "@/components/ui/checkbox";\nimport Radio from "@/components/ui/radio";\nimport Switch from "@/components/ui/switch";\nimport Icon from "@/components/misc/icon";\nimport Divider from "@/components/ui/divider";\n \ntype ListProps = ComponentProps<"div">;\ntype ListItemProps = ComponentProps<"button"> & {\n    label: string;\n    overline?: string;\n    supportingText?: string;\n    trailingSupportingText?: string;\n};\ntype ListDivider = ComponentProps<"hr">;\ntype ListItemLeadingProps = ComponentProps<"div"> & {\n    type: ListItemLeadingTypes;\n    value: string;\n};\ntype ListItemTrailingProps = ComponentProps<"div"> & {\n    type: ListItemTrailingTypes;\n    value: string;\n};\n \ntype ListItemLeadingTypes =\n    | "monogram"\n    | "icon"\n    | "image"\n    | "video"\n    | "checkbox"\n    | "radio"\n    | "switch";\ntype ListItemTrailingTypes = "icon" | "checkbox" | "radio" | "switch";\n \nconst renderVariant = (type: string, value: string) =>\n    ({\n        monogram: <span>{value}</span>,\n        icon: <Icon name={value} />, \n        image: <img src={value} alt={`${type}-${value}`} />, \n        video: (\n            <video controls>\n                <source src={value} />\n            </video>\n        ),\n        checkbox: <Checkbox value={value} />, \n        radio: <Radio value={value} />, \n        switch: <Switch value={value} />, \n    }[type]);\n \nconst List = ({ ...props }: ListProps) => (\n    <div mui-list="" {...props} role="list" tabIndex={-1} />\n);\n \nconst ListItem = ({\n    children,\n    label,\n    overline,\n    supportingText,\n    trailingSupportingText,\n    ...props\n}: ListItemProps) => {\n    return (\n        <button\n            mui-list-item=""\n            {...props}\n            tabIndex={props.onClick ? 0 : -1}\n            role={props.onClick ? "button" : "listitem"}>\n            <div mui-list-item-content="">\n                <div mui-list-item-label="">\n                    {overline && <span mui-list-item-overline="">{overline}</span>}\n                    {label}\n                    {supportingText && (\n                        <span mui-list-item-supporting="">{supportingText}</span>\n                    )}\n                </div>\n                {children}\n            </div>\n            {trailingSupportingText && (\n                <span mui-list-item-trailing-supporting="">\n                    {trailingSupportingText}\n                </span>\n            )}\n        </button>\n    );\n};\n \nconst ListItemLeading = ({ type, value, ...props }: ListItemLeadingProps) => (\n    <div mui-list-item-leading={type} {...props}>\n        {renderVariant(type, value)}\n    </div>\n);\n \nconst ListItemTrailing = ({ type, value, ...props }: ListItemTrailingProps) => (\n    <div mui-list-item-trailing={type} {...props}>\n        {renderVariant(type, value)}\n    </div>\n);\n \nconst ListDivider = ({ ...props }: ListDivider) => <Divider {...props} />;\n \nexport { List, ListItem, ListItemLeading, ListItemTrailing, ListDivider }; ',
        css: '[mui-list] {\n    padding-block: var(--spacing-8);\n    background-color: var(--color-surface-container);\n \n    [mui-list-item] {\n        width: 100%;\n        border: none;\n        outline: none;\n        min-height: 56px;\n        background-color: transparent;\n        padding: var(--spacing-8) var(--spacing-16);\n        display: flex;\n        align-items: center;\n        gap: var(--spacing-16);\n        transition: var(--transition-standard-fast-effects);\n \n        &[role="button"] {\n            cursor: pointer;\n            position: relative;\n            outline-offset: 1px;\n            outline: 10px solid transparent;\n            background-repeat: no-repeat;\n            background-position: center;\n \n            &:hover {\n                background-color: color-mix(\n                    in srgb,\n                    var(--color-on-surface) 8%,\n                    transparent\n                );\n            }\n \n            &:active {\n                background-image: var(--ripple-circle);\n                animation: button-ripple var(--transition-expressive-default-spatial) forwards;\n            }\n \n            &:focus-visible {\n                animation: focus var(--transition-standard-slow-spatial) forwards;\n            }\n        }\n \n        &:disabled {\n            opacity: 0.38;\n            pointer-events: none;\n        }\n \n        [mui-list-item-content] {\n            width: 100%;\n            display: flex;\n            align-items: center;\n            column-gap: var(--spacing-16);\n \n            [mui-list-item-label] {\n                font: var(--font-body-lg);\n                color: var(--color-on-surface);\n                display: grid;\n                text-align: start;\n \n                [mui-list-item-overline] {\n                    font: var(--font-body-sm);\n                    color: var(--color-on-surface-variant);\n                }\n \n                [mui-list-item-supporting] {\n                    font: var(--font-body-md);\n                    color: var(--color-on-surface-variant);\n                }\n            }\n \n            [mui-list-item-leading],\n            [mui-list-item-trailing] {\n                display: flex;\n                align-items: center;\n \n                &[mui-list-item-leading] {\n                    order: -1;\n                }\n \n                &[mui-list-item-trailing] {\n                    flex: 2;\n                    justify-content: end;\n                }\n \n                &[mui-list-item-leading="image"] {\n                    width: 56px;\n                    height: 56px;\n \n                    img {\n                        width: 100%;\n                        height: 100%;\n                        object-fit: cover;\n                    }\n                }\n \n                &[mui-list-item-leading="video"] {\n                    width: 114px;\n                    height: 64px;\n \n                    video {\n                        width: 100%;\n                        height: 100%;\n                        object-fit: cover;\n                    }\n                }\n \n                &[mui-list-item-leading="monogram"] {\n                    width: 40px;\n                    height: 40px;\n                    clip-path: circle();\n                    font: var(--font-title-md);\n                    color: var(--color-primary);\n                    background-color: var(--color-primary-container);\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                }\n            }\n        }\n \n        [mui-list-item-trailing-supporting] {\n            font: var(--font-body-sm);\n            color: var(--color-on-surface-variant);\n        }\n    }\n}',
      },
    },
    {
      id: "supporting-text",
      label: "Supporting Text",
      preview: ListSupporting,
      code: 'import { List, ListItem } from "@/components/ui/list";\n \nconst ListSupporting = () => {\n    return (\n        <div className="demo">\n            <List>\n                <ListItem label="Headline" supportingText="Supporting text" />\n                <ListItem label="Headline" supportingText="Supporting text" />\n                <ListItem label="Headline" supportingText="Supporting text" />\n            </List>\n        </div>\n    );\n};\n \nexport default ListSupporting;',
    },
    {
      id: "Trailing-supporting-text",
      label: "Trailing Supporting Text",
      preview: ListTrailingSupporting,
      code: 'import { List, ListItem } from "@/components/ui/list";\n \nconst ListTrailingSupporting = () => {\n    return (\n        <div className="demo">\n            <List>\n                <ListItem label="Headline" trailingSupportingText="+100" />\n                <ListItem label="Headline" trailingSupportingText="+100" />\n                <ListItem label="Headline" trailingSupportingText="+100" />\n            </List>\n        </div>\n    );\n};\n \nexport default ListTrailingSupporting;',
    },
    {
      id: "Overline",
      label: "Overline",
      preview: ListOverline,
      code: 'import { List, ListItem } from "@/components/ui/list";\n \nconst ListOverline = () => {\n    return (\n        <div className="demo">\n            <List>\n                <ListItem label="Headline" overline="Overline" />\n                <ListItem label="Headline" overline="Overline" />\n                <ListItem label="Headline" overline="Overline" />\n            </List>\n        </div>\n    );\n};\n \nexport default ListOverline;',
    },
    {
      id: "leading",
      label: "Leading",
      preview: ListLeading,
      code: `import { List, ListItem, ListItemLeading } from "@/components/ui/list";\n \nconst ListLeading = () => {\n    return (\n        <div className="demo column">\n            <List>\n                <ListItem\n                    label="Nike"\n                    supportingText="We've got a birthday git for you.">\n                    <ListItemLeading type="monogram" value="N" />\n                </ListItem>\n                <ListItem\n                    label="YouTube"\n                    supportingText="Congratulations on reaching 1 million subscribers.">\n                    <ListItemLeading type="monogram" value="Y" />\n                </ListItem>\n                <ListItem\n                    label="X (Twitter)"\n                    supportingText="Nex login to X from ChromeDesktop on Windows.">\n                    <ListItemLeading type="monogram" value="X" />\n                </ListItem>\n            </List>\n \n            <List>\n                <ListItem\n                    label="Nike"\n                    supportingText="We've got a birthday git for you.">\n                    <ListItemLeading type="icon" value="person" />\n                </ListItem>\n                <ListItem\n                    label="YouTube"\n                    supportingText="Congratulations on reaching 1 million subscribers.">\n                    <ListItemLeading type="icon" value="person" />\n                </ListItem>\n                <ListItem\n                    label="X (Twitter)"\n                    supportingText="Nex login to X from ChromeDesktop on Windows.">\n                    <ListItemLeading type="icon" value="person" />\n                </ListItem>\n            </List>\n \n            <List>\n                <ListItem\n                    label="Nike"\n                    supportingText="We've got a birthday git for you.">\n                    <ListItemLeading type="image" value="https://shorturl.at/AHFDJ" />\n                </ListItem>\n                <ListItem\n                    label="YouTube"\n                    supportingText="Congratulations on reaching 1 million subscribers.">\n                    <ListItemLeading type="image" value="https://shorturl.at/HqygK" />\n                </ListItem>\n                <ListItem\n                    label="X (Twitter)"\n                    supportingText="Nex login to X from ChromeDesktop on Windows.">\n                    <ListItemLeading type="image" value="https://shorturl.at/RZN7E" />\n                </ListItem>\n            </List>\n \n            <List>\n                <ListItem\n                    label="Nike"\n                    supportingText="We've got a birthday git for you.">\n                    <ListItemLeading type="switch" value="nike-1" />\n                </ListItem>\n                <ListItem\n                    label="YouTube"\n                    supportingText="Congratulations on reaching 1 million subscribers.">\n                    <ListItemLeading type="switch" value="youtube-1" />\n                </ListItem>\n                <ListItem\n                    label="X (Twitter)"\n                    supportingText="Nex login to X from ChromeDesktop on Windows.">\n                    <ListItemLeading type="switch" value="x-1" />\n                </ListItem>\n            </List>\n \n            <List>\n                <ListItem\n                    label="Nike"\n                    supportingText="We've got a birthday git for you.">\n                    <ListItemLeading type="checkbox" value="nike-2" />\n                </ListItem>\n                <ListItem\n                    label="YouTube"\n                    supportingText="Congratulations on reaching 1 million subscribers.">\n                    <ListItemLeading type="checkbox" value="youtube-2" />\n                </ListItem>\n                <ListItem\n                    label="X (Twitter)"\n                    supportingText="Nex login to X from ChromeDesktop on Windows.">\n                    <ListItemLeading type="checkbox" value="x-2" />\n                </ListItem>\n            </List>\n \n            <List>\n                <ListItem\n                    label="Nike"\n                    supportingText="We've got a birthday git for you.">\n                    <ListItemLeading type="radio" value="brand" />\n                </ListItem>\n                <ListItem\n                    label="YouTube"\n                    supportingText="Congratulations on reaching 1 million subscribers.">\n                    <ListItemLeading type="radio" value="brand" />\n                </ListItem>\n                <ListItem\n                    label="X (Twitter)"\n                    supportingText="Nex login to X from ChromeDesktop on Windows.">\n                    <ListItemLeading type="radio" value="brand" />\n                </ListItem>\n            </List>\n        </div>\n    );\n};\n \nexport default ListLeading;`,
    },
    {
      id: "trailing",
      label: "Trailing",
      preview: ListTrailing,
      code: `import { List, ListItem, ListItemTrailing } from "@/components/ui/list";\n \nconst ListTrailing = () => {\n  return (\n    <div className="demo column">\n      <List>\n        <ListItem\n          label="Nike"\n          supportingText="We've got a birthday git for you.">\n          <ListItemTrailing type="icon" value="person" />\n        </ListItem>\n        <ListItem\n          label="YouTube"\n          supportingText="Congratulations on reaching 1 million subscribers.">\n          <ListItemTrailing type="icon" value="person" />\n        </ListItem>\n        <ListItem\n          label="X (Twitter)"\n          supportingText="Nex login to X from ChromeDesktop on Windows.">\n          <ListItemTrailing type="icon" value="person" />\n        </ListItem>\n      </List>\n \n      <List>\n        <ListItem\n          label="Nike"\n          supportingText="We've got a birthday git for you.">\n          <ListItemTrailing type="switch" value="nike-1" />\n        </ListItem>\n        <ListItem\n          label="YouTube"\n          supportingText="Congratulations on reaching 1 million subscribers.">\n          <ListItemTrailing type="switch" value="youtube-1" />\n        </ListItem>\n        <ListItem\n          label="X (Twitter)"\n          supportingText="Nex login to X from ChromeDesktop on Windows.">\n          <ListItemTrailing type="switch" value="x-1" />\n        </ListItem>\n      </List>\n \n      <List>\n        <ListItem\n          label="Nike"\n          supportingText="We've got a birthday git for you.">\n          <ListItemTrailing type="checkbox" value="nike-2" />\n        </ListItem>\n        <ListItem\n          label="YouTube"\n          supportingText="Congratulations on reaching 1 million subscribers.">\n          <ListItemTrailing type="checkbox" value="youtube-2" />\n        </ListItem>\n        <ListItem\n          label="X (Twitter)"\n          supportingText="Nex login to X from ChromeDesktop on Windows.">\n          <ListItemTrailing type="checkbox" value="x-2" />\n        </ListItem>\n      </List>\n \n      <List>\n        <ListItem\n          label="Nike"\n          supportingText="We've got a birthday git for you.">\n          <ListItemTrailing type="radio" value="brand" />\n        </ListItem>\n        <ListItem\n          label="YouTube"\n          supportingText="Congratulations on reaching 1 million subscribers.">\n          <ListItemTrailing type="radio" value="brand" />\n        </ListItem>\n        <ListItem\n          label="X (Twitter)"\n          supportingText="Nex login to X from ChromeDesktop on Windows.">\n          <ListItemTrailing type="radio" value="brand" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n \nexport default ListTrailing;`,
    },
    {
      id: "divider",
      label: "Divider",
      preview: ListWithDivider,
      code: 'import {\n  List,\n  ListItem,\n  ListDivider,\n  ListItemLeading,\n} from "@/components/ui/list";\n \nconst ListWithDivider = () => {\n  return (\n    <div className="demo">\n      <List>\n        <ListItem label="Alejandro Ortega" supportingText="Online">\n          <ListItemLeading type="monogram" value="A" />\n        </ListItem>\n        <ListDivider />\n        <ListItem label="Sofia Sacchi" supportingText="Online">\n          <ListItemLeading type="monogram" value="S" />\n        </ListItem>\n        <ListDivider />\n        <ListItem label="Lana Russo" supportingText="Offline">\n          <ListItemLeading type="monogram" value="L" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n \nexport default ListWithDivider;',
    },
  ],
};

export default LIST_DEMO;
